"""1. Даны 2 строки long_phrase и short_phrase. Напишите код, который проверяет действительно ли длинная фраза long_phrase длиннее короткой short_phrase.
 И выводит True или False в зависимости от результата сравнения."""
#Создание переменной long_phrase
long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики'
#Создание переменной short_phrase
short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'
#Сравнение длин переменных (вывод True или False)
print(len(long_phrase)>len(short_phrase))
#True

"""2. Дана строка text. Определите какая из двух букв встречается в нем чаще - 'а' или 'и'."""
#Создание переменной text
text = 'Если программист в 9-00 утра на работе, значит, он там и ночевал'
#Создание переменной счетчика букв 'а'
count_a = 0
#Создание переменной счетчика букв 'и'
count_u = 0
#Цикл, в котором подсчитывается кол-во букв 'а' и 'и'(рез-ты заносятся в счетчики)
for i in text:
    if i == 'а':
        count_a += 1
    if i == 'и':
        count_u += 1
#Вывод буквы, встречающейся чаще
if (count_a > count_u):
    print("Буква 'а' встречается чаще")
else:
    print("Буква 'и' встречается чаще")
#Буква 'а' встречается чаще

"""Дано значение объема файла в байтах. Напишите перевод этого значения в мегабайты в формате:
'Объем файла равен 213.68Mb' """
#Создание переменной byte, содержащее кол-во Байт, которое надо перевести в МегаБайты
byte = 512000
#Создание переменной, содержащей в себе функцию перевода Байт в МегаБайты
mbyte = byte/1024
#Вывод кол-ва МегаБайт в формате 'Объем файла равен 213.68Mb'
print('Объем файла равен {}Mb'.format(mbyte))
#Объем файла равен 500Mb

""" 4. Выведите на экран значение синуса 30 градусов с помощью метода math.sin """
#Подключение библиотеки math
import math
#вывод синуса 30 градусов(т.к синус считается в радианах, делаем перевод градусов в радианы)
print(math.sin(30/180*math.pi))
#0.49999999999999994 (можно применить round())


"""5. В прошлом задании у вас скорее всего не получилось точного значения 0.5 из-за конечной точности вычисления синуса.
Но почему некоторые простые операции также могут давать неточный результат?
Попробуйте вывести на экран результат операции 0.1 + 0.2"""
print(0.1+0.2)
#0.30000000000000004


"""Задания посложнее"""

"""В переменных a и b записаны 2 различных числа.
Вам необходимо написать код, который меняет значения a и b местами без использования третьей переменной. """
#Создание переменной первого числа (можно использовать int(input()))
a = 1000
#Создание переменной второго числа (можно использовать int(input()))
b = 523
#Присвоим переменной b сумму строковых значений двух переменных('1000' + '523' == '1000523')
b = str(a) + str(b)
#Присвоим переменной a значение новой переменной b, за вычетом переменной а('1000523' - '1000' == '523')
a=b.strip(str(a))
#Удалим из переменной b строковое значение переменной a ('1000523' - '523' == '1000')
b = b.strip(a)
#По завершении переводим обе переменные обратно в int
b=int(b)
a=int(a)

"""Дано число в двоичной системе счисления: num=10011.
Напишите алгоритм перевода этого числа в привычную нам десятичную систему счисления.
Возможно, вам понадобится цикл прохождения всех целых чисел от 0 до m:
for n in range(m)"""

#Создание переменной num
num = 10011
#Создание переменной decimal, в которой будет храниться десятичный вид числа num
decimal = 0
#Создание вспомогательного счетчика(для подсчета степени 2)
count = 1
"""Создание цикла по переводу из двоичной системы в десятичную.
При каждом проходе к переменной decimal прибавляется каждая цифра из двоичного числа(начиная с первой), помноженная на 2 в степени длины числа за вычетом вспомогательного счетчика.
С каждым проходом счетчик увеличивается на 1.
Первая цифра умножается на 2 в степени длины(5) за вычетом счетчика(1) (в 4-ой степени), второе число на 2 в степени длины(5) за вычетом счетчика(2) (в третьей) и т.д. """
for n in str(num):
    decimal += int(n)*(2**(len(str(num))-count))
    count += 1
#вывод числа на экран
print(decimal)
#19
